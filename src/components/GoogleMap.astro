---
import googleMapsURL from "../data/map-api-key";
---

<!-- this probably belongs in contact component --><!-- and just have the script bits of the google map stuff in the GoogleMap component --><!-- yeah that doesn't seem to work --><!-- so either have the whole div here or put everything in ContactSection and lose GoogleMap component --><!-- if you put everything in ContactSection, remember to get the stuff from this <style> -->
<div class="section-contact__contact-map" id="map">
	<!-- google maps here -->
</div>

<!-- think this script needs to be is:inline so it blocks -->
<!-- it needs to have executed before the external google script calls initMap -->
<!-- tried deferring it - made no difference to lighthouse performance -->
<script is:inline>
	// Initialize and add the map
	let map;
	let marker;

	async function initMap() {
		// The location of Calder Textiles
		const caldertextiles = { lat: 53.680525, lng: -1.63789 };
		// Request needed libraries.
		//@ts-ignore
		const { Map } = await google.maps.importLibrary("maps");
		const { AdvancedMarkerView } = await google.maps.importLibrary("marker");

		// The map, centered at Calder Textiles
		map = new Map(document.getElementById("map"), {
			zoom: 13,
			center: caldertextiles,
			mapId: "CALDER_TEXTILES",
			// options: {
			// gestureHandling: "greedy",
			// },
		});

		// The marker, positioned at Calder Textiles
		// let marker = new AdvancedMarkerView({
		marker = new google.maps.Marker({
			map: map,
			draggable: false,
			// little drop animation on the marker
			animation: google.maps.Animation.DROP,
			// bounce probably better
			// animation: google.maps.Animation.BOUNCE,
			position: caldertextiles,
			title: "Calder Textiles",
		});

		marker.addListener("click", toggleBounce);
	}

	// see following for animated marker stuff
	// https://developers.google.com/maps/documentation/javascript/examples/marker-animations

	function toggleBounce() {
		if (marker.getAnimation() !== null) {
			marker.setAnimation(null);
		} else {
			marker.setAnimation(google.maps.Animation.BOUNCE);
		}
	}

	window.initMap = initMap;
</script>

<!-- think this needs to be is:inline too, because of the query parameters -->
<script is:inline src={googleMapsURL} async defer></script>

<style>
	.section-contact__contact-map {
		/* min-height: 30rem;  */
		/* min-height: 100%; */
		position: relative;
		/* padding-top and padding-bottom is based on the parent elementâ€™s width. */
		/* So if you had an element that is 500px wide, and padding-top of 100%, the padding-top would be 500px. */
		/* see: https://css-tricks.com/aspect-ratio-boxes/ */
		/* without the padding or a min-height the map box will have height of 0 */
		/* so padding-bottom is what's giving it height */
		/* and the percentage is a percentage of the width */
		/* so 75% is 4/3, 66.67% is 3/2, 56.25% is 16/9 */
		/* it's better than using min-height bc it stays proportional */
		/* otherwise it gets tall and narrow at mobile dimensions */
		padding-bottom: 67%;
		/* background-color: #ccc */
		border: 1px solid hsl(var(--lightbluegrey) / 0.25);
	}
</style>
