---
// import astro-icon component
import { Icon } from "astro-icon";

export interface Props {
	anchorLink: string;
	ariaLabel: string; // Page Content
	hoverTip?: string; // this should probably be the same as ariaLabel, but let's have a separate prop, for flexibility
	divClassName?: string;
	linkClassName?: string; // not sure we need class names for both the div AND the link, but again flexibility
	fillColour?: string;
	fontSize?: string;
}

const {
	anchorLink,
	ariaLabel,
	hoverTip,
	divClassName = "page-down",
	linkClassName = "page-down-link",
	fillColour = "var(--white)",
	fontSize = "1rem",
} = Astro.props;
---

<!-- div to contain the hovertip and the down arrow icon (icon is the link, hovertip is not clickable) -->
<div class:list={[divClassName]}>
	<!-- the hover tip --><!-- <span class="hover-tip">{hoverTip}</span> -->

	<a class:list={[linkClassName]} href={anchorLink} aria-label={ariaLabel}>
		<!-- was span, now using astro-icon -->
		<!-- <span class="material-symbols-outlined"> -->
		<!-- arrow_downward -->
		<!-- try simple expand more chevron -->
		<!-- expand_more -->
		<!-- nah try expand_circle_down -->
		<!-- expand_circle_down -->
		<!-- </span> -->
		<!-- gonna have to use the svg for this, bc we need the lighter weight -->
		<!-- name was ic:outline-expand-circle-down -->
		<Icon name="expand_circle_down_FILL0_wght200_GRAD0_opsz48" class="page-down-link__icon" alt="Arrow pointing down" />
	</a>

	<!-- put it here in the document and move it with css
	(we need the adjacent siblinkg selector, so the hover-tip has to be after the link) -->
	<span class="page-down__hover-tip" set:html={hoverTip} aria-hidden="true" />
</div>

<style define:vars={{ fillColour, fontSize, xTransform: "calc(-100% - var(--fontSize))" }}>
	/* calculate the horizontal transform required to get the hovertip
	from one side of the link to the other (it's after in the document (next sibling)
	but we want it to appear before) */

	.page-down {
		display: flex;
		align-items: center;
		/* gap: var(--fontSize); */
		position: absolute;
		z-index: 1;
		bottom: 1.5rem;
		right: 2rem;
		/* right: var(--testVar); */

		/* border: 1px solid green; */
	}

	.page-down__hover-tip {
		/* font-size: 1.2rem; */
		font-size: var(--fontSize);
		color: hsl(var(--fillColour));

		/* remove except for hover */
		/* display: block;
		clip: rect(0 0 0 0);
		clip-path: inset(50%);
		width: 1px;
		height: 1px; */

		/* padding-right: var(--fontSize); nope! */

		/* display flex so we can center the text */
		/* display: flex; */
		/* align-items: center; */

		/* in the document it's after the link so use css to position it before
		so we can select it with adjacent sibling selector */
		position: absolute;
		transform-origin: center right;
		/* move it 4rem to the right (1rem gap, 3rem width of the icon) */
		transform: translate(var(--xTransform), 1.5rem);
		/* transform: translate(var(--x-transform), 1.5rem); */

		overflow: hidden;
		/* position: relative; */
		/* transform: translate(0, 1.5rem); */
		white-space: nowrap;

		/* make it unselectable whilst invisible */
		-webkit-user-select: none; /* Safari */
		-ms-user-select: none; /* IE 10 and IE 11 */
		user-select: none; /* Standard syntax */

		opacity: 0;
		/* border: 1px solid magenta; */
		/* background-color: orange; */
		transition: opacity 0.2s ease-in, transform 0.2s linear;
		/* transition: opacity 0.4s ease-in; */
	}

	@media (prefers-reduced-motion) {
		.page-down__hover-tip {
			transform: translate(var(--xTransform), 0);
		}
	}

	/* no hoverTip for mobile */
	@media (max-width: 576px) {
		.page-down__hover-tip {
			display: none;
		}
	}

	.page-down-link:hover + .page-down__hover-tip {
		clip: initial;
		clip-path: initial;
		width: auto;
		height: auto;

		/* reset user-select */
		-webkit-user-select: auto; /* Safari */
		-ms-user-select: auto; /* IE 10 and IE 11 */
		user-select: auto; /* Standard syntax */

		/* position: relative; */
		transform: translate(var(--xTransform), 0);

		opacity: 1;
	}
	.page-down-link {
		/* font-size: 3rem; */
		/* color: hsl(var(--white)/0.7); */
		display: block;
		opacity: 0.7;
		text-decoration: none;
		transition: all 0.2s ease-in;

		/* border: 1px solid yellow; */
	}

	/* .page-down-link:hover, */
	/* .page-down-link:focus-visible { */
	.page-down-link:is(:hover, :focus-visible) {
		/* color: hsl(var(--white)); */
		/* border-color: hsl(var(--white)); */
		opacity: 1;
		transform: scale(1.2);
		outline: none;
		/* animation: icon-pop 0.5s ease-in-out forwards; */
	}

	@keyframes icon-pop {
		from {
			opacity: 0.7;
			transform: scale(1);
		}
		50% {
			opacity: 1;
			transform: scale(1.2);
		}
		to {
			transform: scale(1);
			/* opacity: 1; */
		}
	}

	.page-down-link__icon {
		/* NB fill not color for svg */
		/* fill: hsl(var(--white)); */
		/* dynamic fill colout from prop */
		fill: hsl(var(--fillColour));
		width: 3rem;
		height: auto;
	}

	/* we might want to to put this in global, as a utility class */
	.hover-tip {
		/* font-size: 0.8rem; */
		color: hsl(var(--white));
	}
</style>
