---

//import { Image, Picture } from '@astrojs/image/components';
// import Logo from '../images/design/logo-from-pdf.png';
import Logo from '../images/design/logo-from-pdf-trim.png';

// try astro-icons
// see: coding in public / net ninja: Build a Static Site with Figma & Astro #6 - Astro Structure & Components
// https://www.youtube.com/watch?v=0xiMkffs87g
// around 12m 45s in

// also here's a whole video about astro-icon
// https://www.youtube.com/watch?v=8LRY7-985yE

// if astro-icons doesn't work, it might need svgo adding to the config.mjs
// see: https://www.youtube.com/watch?v=DLTVZFzjPDs 6m 44s
// but it looks like this now comes as dependency of astro-icons

// npm install and setup in #5 - Astro Intro & Setup:
// https://www.youtube.com/watch?v=DLTVZFzjPDs&t=238s

// NB needs autoprefixer and postcss!
// npm i -D postcss autoprefixer
// NB remember to add browserslist to package.json for the autoprefixer
// don't think we need to add a postcss config file (postcss.config.cjs)
// it's just for the open props and just-in-time props
// see Build a Static Site with Figma & Astro #5 7mins

import { Icon } from 'astro-icon';

// NB! if this changes, --navbar-brand-logo-height in global.css must be updated accordingly
const logoSize = {
    width: 140,
    height: 51
}

// const curentPath = new URL(Astro.request.url).pathname;
// or shorthand
const currentPath = Astro.url.pathname;

---

<!-- if expanding nav cause the text to shake in firefox -->
<!-- change sticky-top to fixed-top -->
<!-- some padding will have to be added to body or whatever the main container is -->
<!-- calculate it the same way hero min-height is calculated -->
<header class="sticky-top header-caldertextiles">

    <div id="skip" class="visually-hidden"><a href="#main-content">Skip to Main Content</a></div>

    <!-- is it worth doing nav as a separate component? -->

    <!-- Navbar -->
    <!-- -lg means this navbar will do hamburger at screen sizes below large (992) -->

    <!-- tried expand-md, too small to fit the menu in -->
    <!-- was fixed-top, trying sticky-top -->
    <!-- NB! sticky-top needs to be on the header -->
    <!-- because sticky won't work if it's on an only child of the parent -->

    <!-- no bs padding classes here, padding needs to be set in custom css -->
    <!-- using the navbar-vertical-padding var so that we can calculate the height of the hero -->
    <nav class="navbar navbar-expand-lg navbar-dark navbar-caldertextiles">
        <!-- -fluid is ok, but try -xxl so it goes to max width of 1320 -->
        <!-- nah, too small, let's risk fluid -->
        <div class="container-fluid">

            <!-- was h1 with logo image, but probably does more harm than good in SEO terms -->
            <!-- The lead part of the hero text should probably be the h1 -->
            <a class="navbar-brand navbar-caldertextiles__logo" href="./">
                <img src={Logo} alt="Calder Textiles" width={logoSize.width} height={logoSize.height} class="navbar-caldertextiles__logo-img">
            </a>

            <!-- in between the brand link and the navbar collapse we need the hamburger -->
            <button 
                class="navbar-toggler" 
                type="button" 
                aria-expanded="false"
                aria-label="Toggle Mobile Navigation Menu" 
                data-bs-toggle="collapse" 
                data-bs-target="#navmenu"
            >
                <!-- <span class="navbar-toggler-icon"></span> -->

                <!-- try google material icons -->
                <!-- consider installing astro-icon and integrating google material icons with that --> 
                <!-- just to see how it works -->
                <!-- was this: <span class="material-icons">menu</span> -->
                <!-- try this (using local SVG downloaded from Google Material Symbols) -->
                <!-- loads the SVG in src/icons -->
                <!-- might need some kind of size attribute, works if its got width or height properties in the css -->
                <!-- and it'll need some styling so give it a class (was class="material-icons") -->

                <!-- with local svgs -->
                <!-- <Icon name="menu_FILL0_wght400_GRAD0_opsz48" class="navbar-caldertextiles__toggler-icon navbar-caldertextiles__toggler-icon--menu" /> -->
                <!-- <Icon name="close_FILL0_wght400_GRAD0_opsz48" class="navbar-caldertextiles__toggler-icon navbar-caldertextiles__toggler-icon--close" /> -->

                <!-- with icon sets / library -->
                <!-- see https://icones.js.org/collection/material-symbols -->

                <!-- ok material symbols doesn't work, try material icons, yep (ic:baseline-menu) -->
                <!-- try feather icon, yep (feather:menu) -->

                <!-- think accessibility wise it's ok if we have two icons inside the button -->
                <!-- it's not going to affect the button behaviour (toggle), and the aria label is on the button, the icons are purely decorative -->
                <!-- the css should hide one icon at a time anyway, even from screen readers  -->
                <Icon name="ic:baseline-menu" class="navbar-caldertextiles__toggler-icon navbar-caldertextiles__toggler-icon--menu" />
                <Icon name="ic:baseline-close" class="navbar-caldertextiles__toggler-icon navbar-caldertextiles__toggler-icon--close" />

            </button>
            <!-- NB! id="navmenu" not #navmenu! -->
            <div class="collapse navbar-collapse" id="navmenu">
                <!-- ul with a class of navbar-nav bc it's the navbar navigation -->
                <!-- and ms-auto (margin-start auto) pushes it right with the magic of margin auto -->
                <ul class="navbar-nav ms-auto me-2">
                    <!-- and each li needs a class of nav-item -->

                    <!-- see here for aria-current info: -->
                    <!-- https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current -->
                    <!-- aria-current attribute goes on the <a> not the <li> -->
                    <!-- use something like const pathname = new URL(Astro.request.url).pathname -->
                    <!-- see also: https://petermekhaeil.com/til/astro-url/ -->
                    <!-- astro.url is equivalent to new URL(Astro.request.url) -->
                    <!-- https://docs.astro.build/en/reference/api-reference/#astrourl -->
                    <li class="nav-item active">
                       <!-- and each link needs a class of nav-link -->
                       <a href="./aboutus" class="nav-link" aria-current={currentPath === "/aboutus" ? "page" : false}>About Us</a>
                    </li>

                    <li class="nav-item">
                        <a href="./products" class="nav-link" aria-current={currentPath === "/products" ? "page" : false}>Products</a>
                    </li>
                    <li class="nav-item">
                        <a href="./development" class="nav-link" aria-current={currentPath === "/development" ? "page" : false}>Development</a>
                    </li>
                    <li class="nav-item">
                        <a href="./sustainability" class="nav-link" aria-current={currentPath === "/sustainability" ? "page" : false}>Sustainability</a>
                    </li>
                    <li class="nav-item">
                        <a href="./contact" class="nav-link" aria-current={currentPath === "/contact" ? "page" : false}>Contact</a>
                    </li>
                </ul>
            </div>

        </div>
    </nav>

    <!-- maybe the image in here as hero? maybe it belongs in main? nah put hero image in main, keep header for nav and maybe search -->
    <!-- mdn says: The <header> HTML element represents introductory content, typically a group of introductory or navigational aids -->

</header>


<!-- google material icon toggle script -->
<!-- should be ok to bundle -->
<!-- not required now we're using css selectors to show and hide the icons -->
<!-- archived in hamburger-toggle-old.js -->

<style>

.header-caldertextiles {
    
}
        
.navbar-caldertextiles {
    
    /* min-height is no good, the flex centering causes things to shift when the nav expands / collapses */
    /* try setting vars for the logo height and the nav bar vertical padding */
    /* and use these to calculate the hero height */

    /* the variables should probably be declared in global.css */
    padding-top: var(--navbar-vertical-padding);
    padding-bottom: var(--navbar-vertical-padding);

    /* min-height: var(--navbar-height); */
    background-color: var(--accent);
}

.navbar-caldertextiles__container {
    
}

/* nav-item needs a position relative for the fancy link hover to work */
/* .navbar-caldertextiles .nav-item {
    position: relative;
} */

/* the separators in the navmenu list */
/* use adjacent sibling selector (+) so that only the ::befores that immediately follow a nav-item get the separator */
/* i.e. not the first item in the list */
/* could use not first-child, but this seems a bit more elegant */

/* only need this at lg and above */
/* 992px see: https://getbootstrap.com/docs/5.3/layout/breakpoints/ */

@media(min-width: 992px) {

    .navbar-caldertextiles .nav-item + .nav-item::before {
        content: '|';
        font-size: 0.7rem;
        font-weight: bold;
        padding: 0rem 0.5rem;
        color: var(--muted);
        /* position relative so we can nudge it up a bit - it sits on the baseline otherwise */
        position: relative;
        top: -0.1rem;
    }
    
    /* try forcing the nav-link to display: inline */
    .navbar-caldertextiles .nav-link {
        display: inline;
        /* also set colour while we're at it */
        color: hsl(var(--offwhite));

        /* navlink position relative so the ::after can be positioned absolute */
        position: relative;
    }
    
    .navbar-caldertextiles .nav-link:not([aria-current="page"])::after {
        content: '';
        position: absolute;
        background-color: var(--muted);
        height: 1px;
        width: calc(100% - 1rem);
        /* width: 100%; */
        border-radius: 2px;
        bottom: 0;
        left: var(--bs-navbar-nav-link-padding-x);
        /* var(--bs-navbar-nav-link-padding-x) is 0.5rem */

        transform: scaleX(0);
        transition: transform 200ms ease-in-out;
    }

    .navbar-caldertextiles .nav-link:hover::after {
        transform: scaleX(1);
    }

}


.navbar-caldertextiles .nav-link:hover, .navbar-caldertextiles .nav-link:focus-visible {
    color: hsl(var(--white));
}

.navbar-caldertextiles .nav-link:focus-visible {
    outline: none;
    background-color: hsl(var(--white) / 0.1);
}

.navbar-caldertextiles .nav-link[aria-current="page"] {
    color: var(--muted);
}

/* can't find an appropriate class with which to select the mobile nav */
/* a combination of .show and .collpasing seems a bit hacky */

.navbar-caldertextiles .show .nav-link, .navbar-caldertextiles .collapsing .nav-link {
    /* this'll need adjusting when the proper logo goes in */
   padding-left: 2rem;
}

/* get rid of the border on the toggle button */
.navbar-caldertextiles .navbar-toggler {
    border: none;
    border-radius: 0;
}

/* to make the focus outline thinner */
.navbar-caldertextiles .navbar-toggler:focus {
    box-shadow: none;
}

.navbar-caldertextiles .navbar-toggler:focus-visible {
    box-shadow: 0 0 0 0.1rem hsl(var(--lightbluegrey) / 0.5);
    /* use a thin border instead */
    /* nah, border shifts it on focus */
}

.navbar-caldertextiles__logo {
    padding-inline-start: 1rem;
}

.navbar-caldertextiles__logo-img {
    max-width: 100%;
}

.navbar-caldertextiles__toggler-icon {
    /* NB fill instead of color for SVG */
    fill: hsl(var(--white) / 0.5);
    width: 2rem;
    height: 2rem;
    /* think display: none should be ok here accessibility wise */
    display: none;
}

/* use .navbar-toggler's aria-expanded attr to show / hide the appropriate icon */

.navbar-toggler[aria-expanded="false"] .navbar-caldertextiles__toggler-icon--menu {
    display: block;
    /* fill: firebrick; */
}

.navbar-toggler[aria-expanded="true"] .navbar-caldertextiles__toggler-icon--close {
    display: block;
    /* fill: hotpink; */
}
</style>