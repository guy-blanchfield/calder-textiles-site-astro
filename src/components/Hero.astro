---
// now doing the Picture element as a separate component
import PictureFullWidth from "../components/PictureFullWidth.astro";

// import the video component
// will be inserted instead of picture
// if current path is home

// the video component will have to some script to not load or show the video
// on mobile (< 768) and fallback to a background image

// NB we can't get window.innerWidth during the build, duh!

import VideoFullWidth from "../components/VideoFullWidth.astro";

// NB! Scripts from VideoFullWidth will run regardless of the conditional render!!!
// https://github.com/withastro/astro/issues/5283
// "Regular script tags are bundled and attached to the head.
// We wouldn't be able to bundle them if we didn't know if they were going to be used or not.
// This is a known limitation.
// is:inline is what you should use if you really do want to conditionally render a script."

import PageDownArrow from "./PageDownArrow.astro";

// some prop drilling required to get the imageBase from the page that calls it
// through to the pictureFullWidth component

// and also to set an alternative anchor link for the little down arrow if required
// it should default to #content

export interface Props {
	imageBase: string;
	imageAlt: string;
	overlayClass?: string;
	anchorLink?: string;
}

// might need an extra prop here to determine whether hero image needs the gradient overlay
// or maybe just a classlist to pass to the overlay div

const { imageBase, imageAlt, overlayClass = "", anchorLink = "#content" } = Astro.props;

// const curentPath = new URL(Astro.request.url).pathname;
// or shorthand
const currentPath = Astro.url.pathname;

// gonna try the astro image integration for this
// https://docs.astro.build/en/guides/integrations-guide/image/

// "According to the new docs, it appears that plain img tags won't work with files in the src directory if you're using @astrojs/image."

// so uh maybe not use image integration!?
// maybe add it later, once everything's working, and @astrojs/image is less experimental!

// according to: https://stackoverflow.com/questions/34695899/why-is-react-js-removing-the-srcset-tag-on-img

// "Webpack resolves the imports of images (or require) as a string (the uri of the image).
// The image data will just be fetched when the browser requests it and the browser will decide which image it needs according to srcSet."

// so hopefully astro will do something similar

// tried putting images in src and using import as recommended

// can't do dynamic imports (no variables or template literals allowed - has to be a static path)
// but you could use a glob to grab all the image paths in the images/content folder
// then filter them using js once they're into an object or array or collection maybe
// think this still means importing everything, even if they are only paths

// might just stick the images in public for now!

// NB conditional rendering guide from the astro docs
// https://docs.astro.build/en/tutorial/2-pages/3/#conditionally-render-elements
---

<!-- not using min-vh-100 now, using calc and header has sticky-top -->
<div class="hero">
	<!-- if current page is home page, show the video, otherwise show the appropriate picture -->

	{
		currentPath === "/" ? (
			<VideoFullWidth videoBase={imageBase} videoAutoplay="false" />
		) : (
			<PictureFullWidth
				imageBase={imageBase}
				imageAlt={imageAlt}
				pictureClasses="hero__picture picture--blur-load"
				imageClasses="hero__image"
				lazyLoad={false}
			/>
		)
	}

	<!-- a div that fits perfectly over the image -->
	<!-- and has an alpha gradient background to darken the image to make the text more legible -->
	<!-- contains the text div, which contains a heading and a para -->
	<!-- could probably get by without the text container, but keep it for flexibility -->

	<!-- display flex on the overlay so we can align its content vertically -->
	<!-- might need extra padding to shunt it down a bit -->
	<!-- try pt-5 on the hero__text -->
	<!-- only px here otherwise it overides the custom padding-top that we need to adjust for the nav -->
	<!-- <div class="hero__overlay d-flex align-items-center px-5 {overlayClass}" class={overlayClass}> -->
	<!-- padding x only for sm and above i.e. not for mobile -->
	<div class=`hero__overlay d-flex align-items-center px-sm-5 ${overlayClass}`>
		<div class="container">
			<div class="row">
				<!-- was col-md-6 but it gets a bit cramped at md with the heading-nostrap font-size increase -->
				<div class="col-lg-6">
					<!-- put extra padding here, not on the col div -->
					<!-- probably needs shifting down a fair bit more, do it in the custom css -->
					<!-- lose the aos on this div and animate it manually once the loader's finished -->
					<!-- <div class="hero__text p-3" data-aos="fade-up"> -->
					<div class="hero__text p-3">
						<!-- display-x for a slightly more opinionated heading style -->
						<!-- tried bootstrap line-height here, not gonna fly -->
						<!-- do it in custom if you must -->
						<h1 class=`hero__heading display-6 serif ${Astro.slots.has("hero-para") && 'hero__heading--nostrap'}`>
							<slot name="hero-heading" />
						</h1>

						{
							Astro.slots.has("hero-para") && (
								<p class="hero__para fs-5">
									<slot name="hero-para" />
								</p>
							)
						}
					</div>
				</div>

				<!-- dont need the 2nd column to make the first one take half the space  -->
				<!--
                <div class="col-md-6">

                    <div class="nothero__text p-5">

                        <h1>Some other heading</h1>
                        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Reiciendis sint totam debitis? Sapiente labore sit quasi excepturi debitis saepe temporibus inventore, error delectus totam. Atque, officia. Rerum quas autem neque, voluptatem optio consectetur? Unde quibusdam quae eaque voluptas dolorum, blanditiis maxime fugiat harum aliquam quas nemo accusamus repellat dolorem laboriosam.</p>

                    </div>

                    
                </div>
                -->
			</div>
		</div>
	</div>

	<!-- show more / page content link -->
	<!-- should definitely be a link not a button -->
	<!-- from a11y -->
	<!-- "A link is focusable and can be triggered by the enter key. -->
	<!-- A link will redirect you to a new page or a section within the same page." -->
	<PageDownArrow anchorLink={anchorLink} ariaLabel="Page Content" />
</div>

<script>
	// console.log("Hero script running!");
	// function loadFunction() {
	// 	// console.log('adding hero__text--visible');
	// 	// document.querySelector('.hero__text').classList.add('hero__text--visible');
	// }

	// window.addEventListener("load", loadFunction);
</script>

<style>
	/* OK, any styles that are going to be used inside the pictureFullWidth component */
	/* need to be declared in the pictureFullWidth component, because of the scoping thing */
	/* i.e. if you declare them here, they won't work inside the pictureFullWidth component */

	/* it's a bit messy, I'd prefer to have all the hero__ stuff together, but hey */

	/* see: https://stackoverflow.com/questions/31267425/use-the-html-img-tag-as-a-background-image-instead-of-the-css-background-image */
	.hero {
		/* was using bootstrap min-vh-100 */
		/* but we need to take into account the height of the fixed-top navbar */
		/* or it keeps creating vertical position problems for things in main */

		/* NB!! also needs to account for the bootstrap var --bs-navbar-padding-y (0.5rem) */
		/* but NOT the --bs-navbar-brand-padding-y (0.3125rem) */
		/* those vars aren't available when this parses, just add 0.5rem */
		/* why aren't these vertical padding values doubled as you'd expect??? */
		/* min-height: calc(100vh - (var(--navbar-brand-logo-height) + (var(--navbar-vertical-padding)*2) + (var(--bs-navbar-padding-y)*2))); */
		/* min-height: calc(100vh - (var(--navbar-brand-logo-height) + (var(--navbar-vertical-padding)*2) + 0.5rem)); */
		/* min-height: calc(100vh - var(--header-height-calc)); */
		/* set a variable for the window height to use in the calc */
		/* so unsupported units don't break the calc */
		/* use vh as a fallback */
		/* --view-height: 100vh; */
		/* then svh if it's supported */
		/* --view-height: 100svh; */

		/* min-height: calc(var(--view-height) - var(--header-height-calc)); */

		/* try this fiddle to get round using possibly unsupported units in a calc */
		/* it's equivalent to 100vh - var(--header-height-calc)) */

		/* first set height with both units (best supported one first) */
		/* why are these min-height not height? the dimesnions of the video are casuing to overflow without position absolute */
		height: 100vh;
		height: 100svh;
		/* negative margin of the amount we want to subtract */
		margin-top: calc(var(--header-height-calc) * -1);
		/* padding of the amount we want to subtract */
		padding-top: var(--header-height-calc);

		/* seems legit :) */

		/* NB bootstrap uses browser default root font-size, usually 16px */

		overflow: hidden;
		position: relative;

		/* if we do this with grid, we don't need 'position' to make z-index work */
		/* so that might be worth looking into */
		/* see kp's video on grid stacking: */
		/* https://www.youtube.com/watch?v=z2kuC7w9emE&t=405s */

		/* give this a background of --accent so it'll be forgiving if the image and overlay don't match up */
		/* --accent is the nav bar colour */
		background-color: var(--accent);

		display: flex;
	}

	/* hero__picture and hero__image moved to PictureFullWidth component */

	.hero__overlay {
		position: absolute;
		z-index: 1;
		/* probably want width and height not min-width, min-height */
		/* firstly to match the image exactly, secondly to stick to the dimensions of the hero, which has min-vh-100 */
		width: 100%;
		/* height: 100%; */

		/* try the same fiddle to set the height, 100% is making it too high and messing up the align items center */
		min-height: 100vh;
		min-height: 100svh;
		/* negative margin of the amount we want to subtract */
		margin-top: calc(var(--header-height-calc) * -1);
		/* padding of the amount we want to subtract */
		padding-top: var(--header-height-calc);

		/* background: linear-gradient(to left, hsl(0 0 0 / 0.9), hsl(0 0 0 / 0)); */

		/* importantly we need padding-top to be the height of the navbar (which is position fixed) */
		/* try 6rem for now, it's an approximation */
		/* remember to adjust if py value on navbar changes */
		/* think this is redundant now, just let it center (or go to the top on mobile) */
		/* padding-top: 6rem; */
	}

	/* only apply the opacity gradient background if the hero is picture not video */
	/* i.e. has class 'hero__picture' */
	/* using adjacent sibling selector */
	/* this was originally selecting hero__overlay + picture--show */
	/* and was to stop the plain blue background having an gradient overlay on it */
	/* cos it looked a bit weird */
	/* but we do actually need the gradient overlay to show over the background images */
	/* just not over the video */
	/* this is a matter of taste so it might change but for now, let's not have gradient overlay for the video */

	/* the adjacent sibling selector has to be :global */
	/* because the two siblings are in different components, so have different scope */

	:global(.hero__picture + .hero__overlay) {
		/* https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/linear-gradient#values */
		background: linear-gradient(60deg, hsl(0 0% 0% / 0.8), 33%, hsl(0 0% 0% / 0));
		/* background: linear-gradient(to right, hsl(0 0% 0% / 0.5), hsl(0 0% 0% / 0)); */
	}

	:global(.hero__picture + .hero__overlay--none) {
		background: none;
	}

	.hero__text {
		/* set colour more specifically on h1 and p (see below) */
		/* color: hsl(var(--white)); */

		/* let's try hiding this until the page has loaded so it comes up after the image / video shows */

		/* 14-11-2023 */
		/* https://www.debugbear.com/blog/opacity-animation-poor-lcp */
		/* try setting this to 0.1 to stop the animation affecting the lcp - nope */
		/* it's the image fade-ins that are affecting the LCP, not the text fade-ups */
		opacity: 0;

		/* for the fade up */
		transform: translateY(200px);

		/* transition: transform 0.5s ease-in-out, opacity 0.5s ease-in-out; */
		/* aos default is animation-timing-function: ease; */
		/* delay of 0.5s */

		/* it's the delay that is causing bs body colour text to show before the transition */
		/* why only in build though? */
		/* transition: all 0.3s ease 3s; */

		/* try targeting specific transition properties instead of all */
		/* to see if it'll fix the chrome reverse transition issue */
		/* checked on build preview 05/09/2023 */
		/* seems ok, but can't reproduce the problem on test site either */
		/* so will need checking again, maybe after restart */
		/* aos default duration is 400, so use that for this custom transition */

		transition: opacity 400ms ease, transform 400ms ease;
		/* transition: all 0.3s ease; */
	}

	@media (max-width: 576px) {
		.hero__text {
			/* background-color: hsl(var(--darkernavy) / 0.5); */
			/* border: 1px solid hsl(var(--darkernavy) / 0.2); */
			/* yeah I know it should be mobile first but the text position here feels like the exception */
		}
	}

	.hero__text p,
	.hero__text h1 {
		color: hsl(var(--white));
	}

	.hero__text--reset {
	}

	.hero__text--visible {
		/* visibility: visible; */
		opacity: 1;
		transform: translateY(0);
	}

	/* to remove the transition from hero__text */
	/* this gets added by initialise > handleHeroTextTransition() */
	.hero__text--transitioncomplete {
		transition: none;
	}

	.hero__heading {
		/*  font-family is handled by the utility class 'serif' now */
		/* see above, under the :root stuff */
		/* font-family: 'Times New Roman', Times, Georgia, serif; */
		/* font-family: 'Martel', 'Georgia', serif; */
		/* font-weight redundant here bc bs class display-4 has font-weight 300 */
		/* font-weight: normal; */
		/* font-family: 'EB Garamond', serif; */
		/* font-family: 'Libre Baskerville', serif; */
		/* set font-size with bootstrap fs- class, just for practice! */
		/* font-size: 3.3rem; */

		/* NB we're currently using a <br> in the heading slot so the max-width might be redundant - keep in for now */
		/* it only really comes into effect when it goes to a 1 column layout */
		/* NB gonna try a nowrap span on the text in 'products' to stop it breaking in an odd place occasionally */
		max-width: 18ch;

		line-height: 1.4;

		/* this'll be a good place for text-wrap rule */
		/* but mdn says experimental use with caution */
	}

	/* make heading a bit bigger if it's not a strapline */
	/* the class can be added conditional on the existence of slot 'hero-para' */
	/* everything up to 991px, 992px is set with media query below */
	.hero__heading.hero__heading--nostrap {
		font-size: 2rem;
	}

	/* yeah we're gonna need another breakpoint... */
	@media (min-width: 576px) {
		.hero__heading.hero__heading--nostrap {
			font-size: 2.5rem;
		}
	}

	@media (min-width: 768px) {
		.hero__heading {
			/* leave this for now */
			/* line-height: 1.5; */
		}
	}

	/* make the heading a bit bigger on larger screens */
	/* is using display-6 bs class */
	/* actual size will change depending on the font */
	/* e.g. libre baskerville is bigger than baskerville normal */
	/* min-width was 992 but that's a bit small to go to the bigger font-size, try 1200 */
	@media (min-width: 1200px) {
		.hero__heading {
			/* leave this for now */
			/* line-height: 1.5; */
			/* make the heading a bit bigger on larger screens */
			font-size: 2.5rem;
		}

		/* make heading a bit bigger if it's not a strapline */
		/* the class can be added conditional on the existence of slot 'hero-para' */

		.hero__heading.hero__heading--nostrap {
			font-size: 3rem;
		}
	}

	/* same font-size for anything over 991 should be ok */

	/*
	@media (min-width: 1200px) {
		.hero__heading {
			font-size: 2.5rem;
		}
	}
	*/

	.hero__para {
		max-width: 40ch;
		line-height: 1.75rem;
		/* this'll be a good place for text-wrap rule */
		/* but mdn says experimental use with caution */
	}

	/* also add these settings to the css link tag in layout head */
	/* need them here, or it'll just use the defaults */

	/* not required now, using astro-icon */
	/* .material-symbols-outlined { */
	/* font-variation-settings: "FILL" 0, "wght" 200, "GRAD" 0, "opsz" 48; */
	/* } */

	/* these styles are scoped so feel free to do whatever you need to do here */
	/* it won't effect any other material-symbols-outlined outside the hero component */
	/* .material-symbols-outlined { */
	/* font-size: 3rem; */
	/* } */
</style>
