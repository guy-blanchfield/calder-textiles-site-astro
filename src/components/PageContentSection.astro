---
import PageDownArrow from "./PageDownArrow.astro";

// think we're going to need a couple of props to drill through to the pageDownArrow
// to set the link and the aria label
// default it to #contact / Next section: Contact, that's what it'll be most of the time
export interface Props {
	heading: string;
	anchorId?: string;
	textColour?: string;
	bgColour?: string;
	columnLayout?: number;
	sectionFixedHeight?: boolean;
	pageDownArrow?: boolean;
	pageDownAnchorLink?: string;
	pageDownAriaLabel?: string;
}

const {
	heading,
	anchorId = "content",
	textColour = "hsl(var(--white))",
	bgColour = "var(--pageContentBgColour-1)",
	columnLayout = 2,
	sectionFixedHeight = true,
	pageDownArrow = true,
	pageDownAnchorLink = "#contact",
	pageDownAriaLabel = "Next section: Contact",
} = Astro.props;
---

<!-- nb big padding-y in the custom css, bootstrap wouldn't cut it --><!-- padding x only for sm and above i.e. not for mobile -->
<div class="wrapper" class:list={[{ sectionFixedHeight }]}>
	<!-- wrapper div uses the negative margin / padding fiddle to get round using calc with svh. 
		No other padding or margin should be used on it
		if fixedHeight isn't true it'll do nothing at all, just wrap -->
	<section class="section-pagecontent px-sm-5" id={anchorId}>
		<!-- put the id on the container because the negative margin fiddle for the min-height means the anchor links to the wrong place if it's the actual page-content div -->
		<div class="container">
			<!-- content div just to keep everything together -->
			<!-- makes it easier to set padding -->
			<!-- horizontal padding only here, set the vertical padding in custom (because of the negative margin fiddle)  -->
			<div class="section-pagecontent__content px-3">
				<!-- h2 was py-5 but it needs more so do it with custom css -->

				<!-- ideas about the sketchy scrolling on about us in firefox -->
				<!-- disable the transition until page is loaded -->
				<!-- that way it wouldn't affect the scroll within page, only the anchor link to new page -->
				<!-- we'd have to use custom css not aos -->
				<h2 class="section-pagecontent__heading display-5 serif" data-aos="fade-up">{heading}</h2>

				<div class="row" data-aos="fade-up">
					<!-- using padding-end (pe-sm-5) to reduce the line length slightly -->
					<!-- only for sm and above i.e. not for mobile -->
					<!-- this will do for now, columnLayout is either going to be 1 or 2, 2 is the default -->
					<div class={`${columnLayout === 2 ? "col-md-5" : columnLayout === 1 ? "" : ""} pe-sm-5`}>
						<div class="section-pagecontent__text">
							<slot name="page-content" />
						</div>
					</div>

					<!-- probably always gonna need this slot but leave it conditional for now -->
					<!-- margin-top here if it's not large, i.e. if it's stacking -->

					<!-- Offsets: -->
					<!-- Move columns to the right using .offset-md-* classes. -->
					<!-- These classes increase the left margin of a column by * columns. -->
					<!-- For example, .offset-md-4 moves .col-md-4 over four columns. -->

					<!-- Basically the offset is controlling the horizontal gap between the two 'page-contents' -->
					<!-- originally was offset-lg-2 and offset-md-1 -->
					<!-- 2 was a bit much -->

					<!-- using padding-end (pe-5) to reduce the line length slightly -->

					{
						Astro.slots.has("page-content-2") && (
							<div class="col-md-5 offset-md-1 mt-5 mt-md-0 pe-sm-5">
								<div class="section-pagecontent__text">
									<slot name="page-content-2" />
								</div>
							</div>
						)
					}
				</div>
			</div>
		</div>
		{pageDownArrow && <PageDownArrow anchorLink={pageDownAnchorLink} ariaLabel={pageDownAriaLabel} />}
	</section>
</div>

<script>
	/*
	window.onload = () => {
		document.querySelectorAll(".custom-fade-up-hide").forEach((element) => element.classList.add("custom-fade-up"));
	};
	*/
</script>

<style define:vars={{ textColour, bgColour }}>
	/* custom fade up stuff */
	/* so the transition can be applied on window.onload */
	/* to stop it stuttering when linking to index#aboutus */

	/* nah that hasn't made any difference!! */

	/* .custom-fade-up-hide {
		opacity: 0;
		transform: translateY(200px);
		transition: opacity 0.3s ease, transform 0.3s ease;
	}

	.custom-fade-up {
		opacity: 1;
		transform: translateY(0);
	} */

	.section-pagecontent {
		/* to make the section stretch to fit main (if there's no other sections) */
		/* main has display: flex, flex-direction: column */
		/* this is probably redundant if we're setting a min-height */
		/* maybe we need to not set min-height if there's no other sections */
		/* perhaps use a prop to determine which height setting is used */
		flex: 1;

		/* color: hsl(var(--white)); */
		color: var(--textColour);
		background-color: var(--bgColour);
		/* background-color: rgb(127, 141, 150); */
		/* background-color: #7f8d96; */

		/* padding-top now in __content (see below in the @media for explanation) */
		/* padding-top: 2rem; */
		/* let's lose all padding from section-page-content except the horizontal bootstrap stuff */
		/* and the padding top for the negative margin min-height fiddle */
		/* try and do it all on __content */
		/* padding-bottom: 2rem; */

		/* now needs a position relative for the positioning of the page down arrow */
		position: relative;
		/* some z-index adjustment needed on hero otherwise this overlaps it b/c position relative / negative margin */
		/* z-index: 1; */
		/* border: 1px solid red; */
	}

	.section-pagecontent__content {
		padding-top: 2rem;
		/* padding-bottom: 2rem; */
		/* mobile needs more bottom padding so the pageDownArrow doesn't get in the way of the content */
		padding-bottom: 5rem;
		/* border: 1px solid yellow; */
	}

	.section-pagecontent__heading {
		margin-bottom: 2rem;
	}

	/* extra margin and paddings for the page content spacing on larger screens */
	@media (min-width: 768px) {
		.section-pagecontent {
			/* big padding here for larger screens */
			/* careful that it doesn't clash with bs px that's in the markup */

			/* the padding-top is redundant now because padding-top needs to be */
			/* set as part of the negative margin min-height fiddle */
			/* put on the __content class instead */
			/* padding-top: 6rem; */

			/* more at the bottom to make up for the py-5 that's on the heading */
			/* padding-bottom: 8rem; */
		}

		.section-pagecontent__content {
			padding-top: 6rem;
			padding-bottom: 4rem;
		}

		.section-pagecontent__heading {
			/* font-family now handled by .serif utility, see after the :root stuff in global.css */
			/* font-family: 'Georgia, serif'; */
			margin-top: 3rem;
			margin-bottom: 6rem;
		}
	}

	/* sectionFixedHeight in global.css since we're now using it in diagramSection as well */
	/* NB now applied to the wrapper div, NOT the section */
</style>
