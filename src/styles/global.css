/* ---------------- @fontface stuff ------------------- */

/* this is the true baskerville */
@font-face {
	font-family: "Baskerville Normal";
	/* src: local('Baskerville'), url('/fonts/baskerville-normal.woff') format('woff'); */
	src: local("Baskerville"), url("/fonts/baskerville-normal.woff") format("woff");
	font-weight: normal;
	font-style: normal;
}

@font-face {
	font-family: "Libre Baskerville";
	src: url("/fonts/librebaskerville-regular-webfont.woff2") format("woff2"),
		url("/fonts/librebaskerville-regular-webfont.woff") format("woff");
	font-weight: normal;
	font-style: normal;
	/* font-display: swap; */
	/* trying font-display block to stop chrome doing the slow network intervention font-swap */
	/* see: https://stackoverflow.com/questions/40143098/why-does-this-slow-network-detected-log-appear-in-chrome */
	/* nah - block just makes it disappear intead of swapping to times */
	/* try optional - nope this swaps it for times and never unswaps! */

	/* It seems that this font flashing issue is due to chrome detecting a slow network */
	/* i.e. when throttling with devtools */
	/* and so hopefully it won't occur out in the wild */
	/* also, it only occurs when google map api is present */

	/* maybe font-display: block might be the lesser of two evils */

	font-display: swap;
}

/* :root for global custom properties (variables) */

:root {
	/* try overriding the bootstrap body-font variable here */
	/* see: https://www.youtube.com/watch?v=_7jrFQsaxT0 */

	/* yeah the below works fine, but let's see if we can get away with the default bs sytem ui stack */
	/* --bs-body-font-family: 'Roboto', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; */

	/* ----------- colours ------------- */

	/* navy #2c3446 */

	/*

	Navy

	Rgb	rgb(42, 51, 69)
	Hex	#2a3345
	Hsl	hsl(220, 24%, 22%)
	Hwb	hwb(220, 16%, 73%)
	Cmyk cmyk(39%, 26%, 0%, 73%)

	Duck Egg Blue

	Rgb	rgb(118, 141, 151)
	Hex	#768d97
	Hsl	hsl(198, 14%, 53%)
	Hwb	hwb(198, 46%, 41%)
	Cmyk cmyk(22%, 7%, 0%, 41%)

	Dark Teal

	Rgb	rgb(91, 113, 121)
	Hex	#5b7179
	Hsl	hsl(196, 14%, 42%)
	Hwb	hwb(196, 36%, 53%)
	Cmyk cmyk(25%, 7%, 0%, 53%)

	Dark Navy

	Rgb	rgb(27, 33, 42)
	Hex	#1b212a
	Hsl	hsl(216, 22%, 14%)
	Hwb	hwb(216, 11%, 84%)
	Cmyk cmyk(36%, 21%, 0%, 84%)

	Darker Navy

	Rgb	rgb(46, 49, 54)
	Hex	#2e3136
	Hsl	hsl(217, 8%, 20%)
	Hwb	hwb(217, 18%, 79%)
	Cmyk cmyk(15%, 9%, 0%, 79%)

	Footer Navy?
	Rgb	rgb(44, 47, 52)
	Hex	#2c2f34
	Hsl	hsl(217, 8%, 19%)
	Hwb	hwb(217, 17%, 80%)
	Cmyk cmyk(15%, 10%, 0%, 80%)

	*/

	/* --darkergrey: 220 5% 20%; */
	/* --midbluegrey: 204 9% 43%; */
	/* --lightbluegrey: 203 9% 54%; this was the original colourpicker value from the pdf screen grab */

	--duckeggblue: 198 14% 53%;
	/* --lightbluegrey-rgb: 127, 141, 150; */
	/* duckegggrey from from duckeggblue */
	--duckegggrey: 198 9% 53%;

	--darkteal: 196 14% 42%;

	--navy: 220 24% 22%;
	--darknavy: 216 22% 14%;
	--darkernavy: 217 8% 20%;

	--white: 0 0% 100%;
	/* offwhite from the duckeggblue */
	--offwhite: 198 9% 83%;

	--lightgrey: 240 2% 90%;

	--text: hsl(var(--darkernavy));
	--muted: hsl(var(--duckegggrey));
	--accent: hsl(var(--navy));
	--accent-2: hsl(var(--duckeggblue));

	--pageContentBgColour-1: hsl(var(--duckeggblue));
	--pageContentBgColour-2: hsl(var(--darkteal));
	--pageContentBgColour-3: hsl(var(--darknavy));
	--pageContentBgColour-4: hsl(var(--lightgrey));

	/* -------------- sizes --------------- */

	/* set a height for the navbar and we can use the same value to calculate hero height and main top margin or padding */
	/* --navbar-height: 5.5rem; */

	/* navbar height is no good because the vertical centering cause things to shift when navbar expands / collapses */
	/* try setting a height for the logo and some vertical padding values */

	/* then we should be able to use these values to calc the hero height */

	/* this is the same as Header.astro > logoSize.height */
	--navbar-brand-logo-height: 51px;

	--navbar-vertical-padding: 1rem;

	/* try putting the calculation for the header height / hero height here as a global var */
	--header-height-calc: calc(var(--navbar-brand-logo-height) + (var(--navbar-vertical-padding) * 2) + 0.5rem);
}

/* to make sure the page takes up full height, in the event of there not being */
/* enough content to fill the height */

body {
	min-height: 100vh;
	/* margin: 0;  */

	display: flex;
	flex-direction: column;
}

/* main fills all the space between header & footer */
main {
	/* background-color: fuchsia; */
	flex: 1;
	/* shorthand for: flex-grow: 1, flex-shrink 0, flex-basis 0 */
	/* default values are: 0 1 auto */

	/* NB body flex-direction is column so these all relate to the vertical */

	/* make main display: flex so that the sections can stretch to fit if necessary */
	/* e.g. if there's only one section it can stretch to fill all of main */
	/* (main strecthes to fit the available space between header and footer) */
	display: flex;
	flex-direction: column;
}

header {
	/* leave any height settings on header until the hero is in, no telling what it might do */
	/* min-height: 6rem;  */
}

footer {
	/* min-height: 50px;  */
}

/* ------------ end min-height stuff ------------ */

/* utility class to hide stuff */
/* using this on the body to hide everything until scripts are loaded */
.hidden {
	visibility: hidden;
}

/* let's have a utility class for the serif font */
/* otherwise we have to update every heading class */
/* everytime we decide to change the font */
.serif {
	/* font-family: 'Baskerville Normal', 'Martel', 'Georgia', serif; */
	/* font-family: 'Baskerville Normal', serif; */
	font-family: "Libre Baskerville", serif;
	font-weight: normal;
}

/* tailwind calls its nowrap utility whitespace-nowrap */
.nowrap {
	white-space: nowrap;
}

/* this lead para class is applied to slot material in individual pages */
/* scoping means we can't put it in PageContentSection */
/* so it'll have to go here, at least until we find a better way */
.page-content__lead-para {
	font-weight: bold;
}
